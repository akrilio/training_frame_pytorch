model:
  name: ResNetAtt
  pretrained_model:
  input_shape: &input_shape [32, 32]
  num_classes: 10
  encoder_param:
    'block_name': ['ResPostNorm', 'ConvSeqNeck']
    'num_block': [3, 4, 6, 4]
    'channels': [128, 256, 512, 1024]
    'first_stride': 1
    'expansion': 0.25
    'dropout': 0.
  head: 'ConvHead'

datareader:
  name: DatasetEditor
  call: read_cifar
  dataset_path: 'datasets/cifar10'
  # **other_params

program:
  name: Trainer
  use_amp: True
  stop_patience: 200
  monite_value: 'loss'
  compare_type: 'min'
  log_dir: 'logs/ResNetAtt'
  log_items: 'scalar'
  verbose: True
  callbacks: ['precise', 'recall', 'mAP']
  num_epochs: 200
  step_per_epoch: &step_per_epoch 150

train:
  dataset:
    name: CifarDataset
    input_shape: *input_shape
    random: 'medium' # if SSLDataset ['strong', ...]
  loader:
    batch_size: 1024
    step_per_epoch: *step_per_epoch
    num_workers: 12
    shuffle: true
    pin_memory: True
    persistent_workers: True
    prefetch_factor: 2

valid:
  dataset:
    name: CifarDataset
    input_shape: *input_shape
    random: 'valid'
  loader:
    batch_size: 1024
    num_workers: 4
    shuffle: False
    pin_memory: True
    persistent_workers: True
    prefetch_factor: 2

optimizer:
  name: SGD
  lr: 1e-3
  # momentum: 0.9
  # nesterov: True
  betas: [0.9, 0.999]
  eps: 1e-8
  weight_decay: 1e-4
  lr_scheduler:
      name: CosineAnnealingLR
      T_max: 50000

loss:
  name: cross_entropy
  # weight: ...